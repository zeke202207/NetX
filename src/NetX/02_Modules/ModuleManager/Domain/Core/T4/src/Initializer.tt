<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".txt" #>

using Authentication.OAuth;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.Extensions.DependencyInjection;
using NetX.Common;
using NetX.DatabaseSetup;
using NetX.Module;
using System.Reflection;

namespace <#= _model.Project.Name #>;

/// <summary>
/// 模块初始化器
/// netx框架自动加载初始化模块
/// </summary>
internal class <#= _model.Project.Alias #>Initializer : ModuleInitializer
{
    /// <summary>
    /// 模块唯一标识
    /// netx内，不允许重复
    /// </summary>
    public override Guid Key => new Guid(<#= _model.Project.Alias #>Const.C_<#= _model.Project.Alias #>_KEY);

    /// <summary>
    /// 模块类型
    /// 一般指定为用户模块
    /// </summary>
    public override ModuleType ModuleType => ModuleType.UserModule;

    /// <summary>
    /// 配置application
    /// </summary>
    /// <param name="app">A class that provides the mechanisms to configure an application's request pipeline.</param>
    /// <param name="env">Provides information about the web hosting environment an application is running in</param>
    /// <param name="context">模块上下文</param>
    public override void ConfigureApplication(IApplicationBuilder app, IWebHostEnvironment env, ModuleContext context)
    {

    }

    /// <summary>
    /// 配置services
    /// </summary>
    /// <param name="services">Specifies the contract for a collection of service descriptors.</param>
    /// <param name="env">Provides information about the web hosting environment an application is running in</param>
    /// <param name="context">模块上下文</param>
    public override void ConfigureServices(IServiceCollection services, IWebHostEnvironment env, ModuleContext context)
    {
        //注入mapper
        services.AddAutoMapper(AppDomain.CurrentDomain.GetAssemblies());
        //CodeFirst
        services.AddMigratorAssembly(new Assembly[] { Assembly.GetExecutingAssembly() }, MigrationSupportDbType.MySql5);
    }
}
