<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NetX.App</name>
    </assembly>
    <members>
        <member name="T:NetX.App.App">
            <summary>
            全局应用程序类
            </summary>
        </member>
        <member name="P:NetX.App.App.RootServices">
            <summary>
            根服务
            </summary>
        </member>
        <member name="P:NetX.App.App.HttpContext">
            <summary>
            获取请求上下文
            </summary>
        </member>
        <member name="P:NetX.App.App.Configuration">
            <summary>
            获取配置信息
            </summary>
        </member>
        <member name="M:NetX.App.App.#cctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:NetX.App.App.GetUserModuleOptions">
            <summary>
            获取模块配置信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetX.App.App.GetModuleInitializer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:NetX.App.AppConst.C_APP_CACHE_ASSEMBLY_NAME">
            <summary>
            缓存模块程序集名称
            </summary>
        </member>
        <member name="F:NetX.App.AppConst.C_APP_CACHE_CLASS_NAME">
            <summary>
            缓存文件名称
            </summary>
        </member>
        <member name="F:NetX.App.AppConst.C_APP_CONFIG_FILE_NAME">
            <summary>
            配置文件目录名称
            </summary>
        </member>
        <member name="F:NetX.App.AppConst.C_APP_JSON_FILE">
            <summary>
            json文件筛选器
            </summary>
        </member>
        <member name="T:NetX.App.AppHandler.IAppShutdownHandler">
            <summary>
            应用程序关闭处理接口
            </summary>
        </member>
        <member name="M:NetX.App.AppHandler.IAppShutdownHandler.Handle">
            <summary>
            处理操作
            </summary>
        </member>
        <member name="T:NetX.App.IAppStartHandler">
            <summary>
            应用程序启动处理接口
            </summary>
        </member>
        <member name="M:NetX.App.IAppStartHandler.Handle">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetX.App.ApiBaseController">
            <summary>
            api接口提供基类
            </summary>
        </member>
        <member name="T:NetX.App.ApiPermissionController">
            <summary>
            授权先控制的api接口提供基类
            </summary>
        </member>
        <member name="T:NetX.App.BaseController">
            <summary>
            控制器基类
            </summary>
        </member>
        <member name="T:NetX.App.Extensions.ApplicationBuilderExtensions">
            <summary>
            应用程序扩展方法
            </summary>
        </member>
        <member name="M:NetX.App.Extensions.ApplicationBuilderExtensions.UseStartupHandler(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            启用应用启动处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetX.App.Extensions.ApplicationBuilderExtensions.UseShutdownHandler(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            启用应用停止处理
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetX.App.AppWebApplicationBuilderExtensions">
            <summary>
            应用程序扩展
            </summary>
        </member>
        <member name="M:NetX.App.AppWebApplicationBuilderExtensions.InjectFrameworkService(Microsoft.AspNetCore.Builder.WebApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            注入系统服务
            </summary>
            <param name="webApplicationBuilder"></param>
            <param name="env"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.App.AppWebApplicationBuilderExtensions.InjectFrameworkApplication(Microsoft.AspNetCore.Builder.WebApplication,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            注入系统应用
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.App.AppWebApplicationBuilderExtensions.InjectUserModulesService(Microsoft.AspNetCore.Builder.WebApplicationBuilder,System.Collections.Generic.Dictionary{System.Guid,NetX.Module.ModuleOptions},Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            注入用户模块
            </summary>
            <param name="webApplicationBuilder"></param>
            <param name="options"></param>
            <param name="env"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.App.AppWebApplicationBuilderExtensions.InjectUserModulesApplication(Microsoft.AspNetCore.Builder.WebApplication,System.Collections.Generic.Dictionary{System.Guid,NetX.Module.ModuleOptions},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            注入用户模块应用
            </summary>
            <param name="app"></param>
            <param name="options"></param>
            <param name="env"></param>
            <returns></returns>
        </member>
        <member name="T:NetX.App.ServiceCollectionExtensions">
            <summary>
            服务注入扩展方法
            </summary>
        </member>
        <member name="M:NetX.App.ServiceCollectionExtensions.AddServicesFromAssembly(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Reflection.Assembly)">
            <summary>
            从指定程序集中注入服务
            </summary>
            <param name="services"></param>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="T:NetX.App.TenantContextFilter">
            <summary>
            TenantContext过滤器
            </summary>
        </member>
        <member name="M:NetX.App.TenantContextFilter.#ctor(NetX.Tenants.ITenantAccessor{NetX.Tenants.Tenant},NetX.Tenants.TenantOption,NetX.DatabaseSetup.MigrationService)">
            <summary>
            TenantContext资源过滤器实例
            </summary>
            <param name="accessor"></param>
            <param name="tenantOption"></param>
            <param name="migrationService"></param>
        </member>
        <member name="M:NetX.App.TenantContextFilter.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:NetX.App.TenantContextFilter.OnResourceExecuting(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:NetX.App.TenantContextFilter.OnResourceExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutionDelegate)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="P:NetX.App.InternalApp.RootServices">
            <summary>
            根服务
            </summary>
        </member>
        <member name="F:NetX.App.InternalApp.ModuleCotextKeyValuePairs">
            <summary>
            用户程序集集合
            </summary>
        </member>
        <member name="F:NetX.App.InternalApp.FrameworkContextKeyValuePairs">
            <summary>
            系统程序集集合
            </summary>
        </member>
        <member name="F:NetX.App.InternalApp.UserModeulOptions">
            <summary>
            用户组件模块设置项
            </summary>
        </member>
        <member name="P:NetX.App.InternalApp.FrameworkModuleOptions">
            <summary>
            系统组件模块
            </summary>
        </member>
        <member name="P:NetX.App.CorsAccessorOptions.PolicyName">
            <summary>
            策略名称
            </summary>
        </member>
        <member name="P:NetX.App.CorsAccessorOptions.PreflightMaxAge">
            <summary>
            预检过期时间
            </summary>
        </member>
        <member name="T:NetX.App.RunOption">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Builder.WebApplication"/> 方式进行配置
            </summary>
        </member>
        <member name="F:NetX.App.RunOption.ActionBuilder">
            <summary>
            自定义builder委托<see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/>
            </summary>
        </member>
        <member name="F:NetX.App.RunOption.ActionConfigure">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Builder.WebApplication"/>
            </summary>
        </member>
        <member name="F:NetX.App.RunOption.ActionConfigrationManager">
            <summary>
            <see cref="T:Microsoft.Extensions.Configuration.ConfigurationManager"/>
            </summary>
        </member>
        <member name="P:NetX.App.RunOption.ActionServiceCollection">
            <summary>
            <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>
            </summary>
        </member>
        <member name="P:NetX.App.RunOption.Options">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Builder.WebApplicationOptions"/>
            </summary>
        </member>
        <member name="P:NetX.App.RunOption.Builder">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/>
            </summary>
        </member>
        <member name="P:NetX.App.RunOption.App">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Builder.WebApplication"/>
            </summary>
        </member>
        <member name="P:NetX.App.RunOption.Modules">
            <summary>
            应用服务组件
            </summary>
        </member>
        <member name="P:NetX.App.RunOption.Default">
            <summary>
            默认配置项
            </summary>
        </member>
        <member name="M:NetX.App.RunOption.#ctor">
            <summary>
            内部配置类实例
            </summary>
        </member>
        <member name="M:NetX.App.RunOption.ConfigOption(Microsoft.AspNetCore.Builder.WebApplicationOptions)">
            <summary>
            
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.App.RunOption.ConfigBuilder(System.Action{Microsoft.AspNetCore.Builder.WebApplicationBuilder})">
            <summary>
            
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.App.RunOption.ConfigApplication(System.Action{Microsoft.AspNetCore.Builder.WebApplication})">
            <summary>
            
            </summary>
            <param name="application"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.App.RunOption.ConfigrationManager(System.Action{Microsoft.Extensions.Configuration.ConfigurationManager})">
            <summary>
            
            </summary>
            <param name="configrationManager"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.App.RunOption.ConfigrationServiceCollection(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration})">
            <summary>
            
            </summary>
            <param name="configServiceCollection"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.App.RunOption.InitModules">
            <summary>
            初始化加载模块:系统模块\业务模块
            </summary>
        </member>
        <member name="M:NetX.App.RunOption.InitUserModules">
            <summary>
            初始化用户自定义模块
            </summary>
        </member>
        <member name="T:NetX.App.ServerHost">
            <summary>
            服务宿主主机
            </summary>
        </member>
        <member name="M:NetX.App.ServerHost.Start(NetX.App.RunOption,System.String)">
            <summary>
            启动web服务器
            默认端口 5000/5001
            </summary>
            <param name="options"></param>
            <param name="urls"></param>
        </member>
        <member name="M:NetX.App.ServerHost.AddCacheKey(System.Collections.Generic.List{NetX.Cache.Core.CacheKeyDescriptor},System.Guid,NetX.Module.ModuleType,System.Type[])">
            <summary>
            添加fw其他模块缓存key集合
            </summary>
            <param name="list"></param>
            <param name="moduleId"></param>
            <param name="moduleType"></param>
            <param name="types"></param>
        </member>
        <member name="M:NetX.App.ServerHost.GetModuleOption(System.Guid,NetX.Module.ModuleType)">
            <summary>
            获取模块设置
            </summary>
            <param name="moduleId"></param>
            <param name="moduleType"></param>
            <returns></returns>
        </member>
        <member name="T:NetX.App.ServerModuleInitializer">
            <summary>
            内部框架服务模块初始化器
            </summary>
        </member>
        <member name="P:NetX.App.ServerModuleInitializer.Key">
            <summary>
            模块唯一标识
            </summary>
        </member>
        <member name="P:NetX.App.ServerModuleInitializer.ModuleType">
            <summary>
            模块类型
            </summary>
        </member>
        <member name="M:NetX.App.ServerModuleInitializer.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,NetX.Module.ModuleContext)">
            <summary>
            配置服务
            Demo宏定义下的内容为使用示例，具体是否启用，根据业务自定决定
            </summary>
            <param name="services"></param>
            <param name="env"></param>
            <param name="context"></param>
        </member>
        <member name="M:NetX.App.ServerModuleInitializer.ConfigureApplication(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,NetX.Module.ModuleContext)">
            <summary>
            配置应用程序
            注释需要
            非连续与<see cref="M:NetX.App.ServerModuleInitializer.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,NetX.Module.ModuleContext)"/> 对应，方便阅读
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="context"></param>
        </member>
    </members>
</doc>
