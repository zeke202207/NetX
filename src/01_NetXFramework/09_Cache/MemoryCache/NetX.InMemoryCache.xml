<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NetX.InMemoryCache</name>
    </assembly>
    <members>
        <member name="T:NetX.InMemoryCache.MemoryCacheProvider">
            <summary>
            内存缓存器
            </summary>
        </member>
        <member name="M:NetX.InMemoryCache.MemoryCacheProvider.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
            内存缓存器实例
            </summary>
            <param name="momoryCache"></param>
        </member>
        <member name="M:NetX.InMemoryCache.MemoryCacheProvider.Exists(System.String)">
            <summary>
            缓存key是否存在
            </summary>
            <param name="key">缓存key</param>
            <returns></returns>
        </member>
        <member name="M:NetX.InMemoryCache.MemoryCacheProvider.Exists``1(System.String)">
            <summary>
            缓存key是否存在
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.InMemoryCache.MemoryCacheProvider.ExistsAsync(System.String)">
            <summary>
            缓存key是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.InMemoryCache.MemoryCacheProvider.Get(System.String)">
            <summary>
            根据key获取缓存value
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.InMemoryCache.MemoryCacheProvider.Get``1(System.String)">
            <summary>
            根据key获取缓存value
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.InMemoryCache.MemoryCacheProvider.GetAllKeys">
            <summary>
            获取全部缓存key集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetX.InMemoryCache.MemoryCacheProvider.GetAsync(System.String)">
            <summary>
            根据key获取缓存value
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.InMemoryCache.MemoryCacheProvider.GetAsync``1(System.String)">
            <summary>
            根据key获取缓存value
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.InMemoryCache.MemoryCacheProvider.Remove(System.String)">
            <summary>
            移除缓存key所有内容
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.InMemoryCache.MemoryCacheProvider.RemoveAsync(System.String)">
            <summary>
            移除缓存key所有内容
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.InMemoryCache.MemoryCacheProvider.RemoveByPrefixAsync(System.String)">
            <summary>
            移除缓存前缀为<code>prefix</code>的key所有内容
            </summary>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.InMemoryCache.MemoryCacheProvider.Set``1(System.String,``0)">
            <summary>
            设置缓存
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.InMemoryCache.MemoryCacheProvider.Set``1(System.String,``0,System.TimeSpan)">
            <summary>
            设置缓存
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.InMemoryCache.MemoryCacheProvider.SetAsync``1(System.String,``0)">
            <summary>
            设置缓存
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.InMemoryCache.MemoryCacheProvider.SetAsync``1(System.String,``0,System.TimeSpan)">
            <summary>
            设置缓存
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.InMemoryCache.MemoryCacheProvider.TryGetValue(System.String,System.String@)">
            <summary>
            根据缓存key获取缓存内容
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.InMemoryCache.MemoryCacheProvider.TryGetValue``1(System.String,``0@)">
            <summary>
            根据缓存key获取缓存内容
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NetX.InMemoryCache.ServiceCollectionExtensions">
            <summary>
            缓冲注入类
            </summary>
        </member>
        <member name="M:NetX.InMemoryCache.ServiceCollectionExtensions.AddInMemoryCache(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.Collections.Generic.IEnumerable{NetX.Cache.Core.CacheKeyDescriptor}})">
            <summary>
            添加缓存
            </summary>
            <param name="services"></param>
            <param name="CacheKeys"></param>
            <returns></returns>
        </member>
    </members>
</doc>
