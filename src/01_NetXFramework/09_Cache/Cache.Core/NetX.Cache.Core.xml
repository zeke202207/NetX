<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NetX.Cache.Core</name>
    </assembly>
    <members>
        <member name="T:NetX.Cache.Core.CacheKeyDescriptor">
            <summary>
            缓存键描述信息
            </summary>
        </member>
        <member name="P:NetX.Cache.Core.CacheKeyDescriptor.ModuleId">
            <summary>
            所属模块唯一标识
            </summary>
        </member>
        <member name="P:NetX.Cache.Core.CacheKeyDescriptor.ModuleName">
            <summary>
            所属模块编码
            </summary>
        </member>
        <member name="P:NetX.Cache.Core.CacheKeyDescriptor.Name">
            <summary>
            名称KEY
            </summary>
        </member>
        <member name="P:NetX.Cache.Core.CacheKeyDescriptor.Desc">
            <summary>
            说明
            </summary>
        </member>
        <member name="T:NetX.Cache.Core.ICacheProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetX.Cache.Core.ICacheProvider.Get(System.String)">
            <summary>
            获取
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:NetX.Cache.Core.ICacheProvider.Get``1(System.String)">
            <summary>
            获取
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:NetX.Cache.Core.ICacheProvider.GetAsync(System.String)">
            <summary>
            获取
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:NetX.Cache.Core.ICacheProvider.GetAsync``1(System.String)">
            <summary>
            获取
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:NetX.Cache.Core.ICacheProvider.TryGetValue(System.String,System.String@)">
            <summary>
            尝试获取
            </summary>
            <param name="key">键</param>
            <param name="value">返回值</param>
            <returns></returns>
        </member>
        <member name="M:NetX.Cache.Core.ICacheProvider.TryGetValue``1(System.String,``0@)">
            <summary>
            尝试获取
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">键</param>
            <param name="value">返回值</param>
            <returns></returns>
        </member>
        <member name="M:NetX.Cache.Core.ICacheProvider.Set``1(System.String,``0)">
            <summary>
            设置
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:NetX.Cache.Core.ICacheProvider.Set``1(System.String,``0,System.TimeSpan)">
            <summary>
            设置
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="expires">有效期(分钟)</param>
        </member>
        <member name="M:NetX.Cache.Core.ICacheProvider.SetAsync``1(System.String,``0)">
            <summary>
            设置
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">键</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:NetX.Cache.Core.ICacheProvider.SetAsync``1(System.String,``0,System.TimeSpan)">
            <summary>
            设置
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="expires">有效期(分钟)</param>
            <returns></returns>
        </member>
        <member name="M:NetX.Cache.Core.ICacheProvider.Remove(System.String)">
            <summary>
            删除
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:NetX.Cache.Core.ICacheProvider.RemoveAsync(System.String)">
            <summary>
            删除
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.Cache.Core.ICacheProvider.RemoveByPrefixAsync(System.String)">
            <summary>
            删除所有前缀<paramref name="prefix"/>的缓存
            </summary>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.Cache.Core.ICacheProvider.Exists(System.String)">
            <summary>
            指定键是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.Cache.Core.ICacheProvider.Exists``1(System.String)">
            <summary>
            指定键是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NetX.Cache.Core.ICacheProvider.ExistsAsync(System.String)">
            <summary>
            指定键是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:NetX.Cache.Core.ServiceCollectionExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetX.Cache.Core.ServiceCollectionExtensions.AddCache``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.Collections.Generic.IEnumerable{NetX.Cache.Core.CacheKeyDescriptor}})">
            <summary>
            添加缓存
            </summary>
            <param name="services"></param>
            <param name="CacheKeys"></param>
            <returns></returns>
        </member>
    </members>
</doc>
